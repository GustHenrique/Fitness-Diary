// <auto-generated />
using System;
using FitnessDiary.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessDiary.Migrations
{
    [DbContext(typeof(SQLServerContext))]
    partial class SQLServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessDiary.Entidades.CategoriaExercicio", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdCategoria");

                    b.ToTable("CategoriaExercicios");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Nome = "Força"
                        },
                        new
                        {
                            IdCategoria = 2,
                            Nome = "Core e Abdominais"
                        },
                        new
                        {
                            IdCategoria = 3,
                            Nome = "Exercícios com Peso Corporal"
                        },
                        new
                        {
                            IdCategoria = 4,
                            Nome = "Exercícios de Resistência"
                        },
                        new
                        {
                            IdCategoria = 5,
                            Nome = "Exercícios para Grupos Musculares Específicos"
                        });
                });

            modelBuilder.Entity("FitnessDiary.Entidades.Exercicio", b =>
                {
                    b.Property<int>("IdExercicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExercicio"));

                    b.Property<double>("CaloriasQueimadasPorSeries")
                        .HasColumnType("float");

                    b.Property<int>("IdGrupoMuscular")
                        .HasColumnType("int");

                    b.Property<int>("IdTreino")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<int>("Repeticoes")
                        .HasColumnType("int");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.HasKey("IdExercicio");

                    b.HasIndex("IdGrupoMuscular");

                    b.HasIndex("IdTreino");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("FitnessDiary.Entidades.GrupoMuscular", b =>
                {
                    b.Property<int>("IdGrupoMuscular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupoMuscular"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdGrupoMuscular");

                    b.ToTable("GruposMusculares");

                    b.HasData(
                        new
                        {
                            IdGrupoMuscular = 1,
                            Nome = "Peitoral"
                        },
                        new
                        {
                            IdGrupoMuscular = 2,
                            Nome = "Dorsal"
                        },
                        new
                        {
                            IdGrupoMuscular = 3,
                            Nome = "Ombros"
                        },
                        new
                        {
                            IdGrupoMuscular = 4,
                            Nome = "Bíceps"
                        },
                        new
                        {
                            IdGrupoMuscular = 5,
                            Nome = "Tríceps"
                        },
                        new
                        {
                            IdGrupoMuscular = 6,
                            Nome = "Quadríceps"
                        },
                        new
                        {
                            IdGrupoMuscular = 7,
                            Nome = "Isquiotibiais"
                        },
                        new
                        {
                            IdGrupoMuscular = 8,
                            Nome = "Glúteos"
                        },
                        new
                        {
                            IdGrupoMuscular = 9,
                            Nome = "Panturrilhas"
                        },
                        new
                        {
                            IdGrupoMuscular = 10,
                            Nome = "Abdômen"
                        },
                        new
                        {
                            IdGrupoMuscular = 11,
                            Nome = "Lombar"
                        },
                        new
                        {
                            IdGrupoMuscular = 12,
                            Nome = "Músculos do Core"
                        });
                });

            modelBuilder.Entity("FitnessDiary.Entidades.Treino", b =>
                {
                    b.Property<int>("IdTreino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTreino"));

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdTreino");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("FitnessDiary.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<double?>("Altura")
                        .HasColumnType("float");

                    b.Property<DateTime>("DtaNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double?>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FitnessDiary.Entidades.Exercicio", b =>
                {
                    b.HasOne("FitnessDiary.Entidades.GrupoMuscular", "GrupoMuscular")
                        .WithMany("Exercicios")
                        .HasForeignKey("IdGrupoMuscular")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessDiary.Entidades.Treino", "Treino")
                        .WithMany("Exercicios")
                        .HasForeignKey("IdTreino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoMuscular");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("FitnessDiary.Entidades.Treino", b =>
                {
                    b.HasOne("FitnessDiary.Entidades.CategoriaExercicio", "Categoria")
                        .WithMany("Treinos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessDiary.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FitnessDiary.Entidades.CategoriaExercicio", b =>
                {
                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("FitnessDiary.Entidades.GrupoMuscular", b =>
                {
                    b.Navigation("Exercicios");
                });

            modelBuilder.Entity("FitnessDiary.Entidades.Treino", b =>
                {
                    b.Navigation("Exercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
