@page "/perfil"
@inject IUsuarioService usuarioService
@inject ILocalStorageService localStorage
@rendermode InteractiveServer


<Loading IsLoading="isLoading" />

<div class="container mt-4">
    <div class="heading_container mb-4">
        <h2>Perfil do Usuário</h2>
    </div>
    <div class="row">
        <div class="col-md-6 offset-md-3">
                <EditForm Model="@usuario" OnValidSubmit="@Salvar" class="form">
                    <div class="form-group">
                        <label for="primeiroNome">Primeiro Nome:</label>
                        <InputText id="primeiroNome" @bind-Value="usuario.Nome" class="form-control" Disabled="@isReadonly" />
                    </div>
                    <div class="form-group">
                        <label for="peso">Peso:</label>
                        <InputNumber id="peso" @bind-Value="usuario.Peso" class="form-control" Disabled="@isReadonly" />
                    </div>
                    <div class="form-group">
                        <label for="altura">Altura:</label>
                        <InputNumber id="altura" @bind-Value="usuario.Altura" class="form-control" Disabled="@isReadonly" />
                    </div>

                    <div class="form-group text-center">
                        @if (isReadonly)
                        {
                            <button type="button" class="btn btn-primary" @onclick="Editar">Editar</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-primary">Salvar</button>
                            <button type="button" class="btn btn-danger ml-2" @onclick="Cancelar">Cancelar</button>
                        }
                    </div>
                </EditForm>
        </div>
    </div>
</div>

@code {
    public int IdUsuario;
    private Usuario usuario = new Usuario();
    private bool isReadonly = true;
    private bool isLoading = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isLoading = true;
            StateHasChanged();

            IdUsuario = await localStorage.GetItemAsync<int>("IdUsuario");
            GetUsuario();
        }
    }

    private async void GetUsuario()
    {
        usuario = await usuarioService.GetUsuarioByIdAsync(IdUsuario);

        isLoading = false;
        StateHasChanged();
    }

    private async void Editar()
    {
        isReadonly = false;
    }

    private async Task Salvar()
    {
        isLoading = true;
        StateHasChanged();

        await usuarioService.UpdateUsuarioAsync(usuario);
        GetUsuario();
        isReadonly = true;
    }

    private void Cancelar()
    {
        GetUsuario();
        isReadonly = true;
    }
}