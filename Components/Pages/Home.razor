@page "/home"
@inject IUsuarioService clienteService
@inject NavigationManager navegacao
@rendermode InteractiveServer

<h3>ListaUsuario</h3>

@if (clientes == null)
{
    <p>Carregando ....</p>
}

else
{
    <button class="btn btn-success" @onclick="AdicionarUsuario"> Adicionar Novo Usuario</button>
    <table class="table">

        <thead>
            <tr>
                <th>ID</th>
                <th>Nome</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cliente in clientes)
            {
                <tr>
                    <td>@cliente.IdUsuario</td>
                    <td>@cliente.PrimeiroNome</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=>AtualizarUsuario(cliente.IdUsuario)">Editar</button>
                        <button class="btn btn-danger" @onclick="()=>ExcluirUsuario(cliente)">Excluir</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Usuario> clientes;

    protected override async Task OnInitializedAsync()
    {
        clientes = await clienteService.GetUsuarioAsync();
    }
    private void AdicionarUsuario()
    {
        navegacao.NavigateTo("/cadastroUsuario/novo");
    }
    private void AtualizarUsuario(int clienteId)
    {
        navegacao.NavigateTo($"/cadastroUsuario/editar/{clienteId}");
    }
    private async Task ExcluirUsuario(Usuario cliente)
    {
        await clienteService.DeleteUsuarioAsync(cliente);
        clientes = await clienteService.GetUsuarioAsync();

    }

}
