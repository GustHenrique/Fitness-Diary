@page "/treinos"
@inject IUsuarioService clienteService
@inject NavigationManager navegacao
@rendermode InteractiveServer

<div class="container">
    <div class="heading_container">
        <h2>
            Meus Treinos
        </h2>
    </div>
    <div class="row">
        <div class="container">
            @if (treinos == null || treinos.Count == 0)
            {
                <p>Nenhum treino cadastrado.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var treino in treinos)
                    {
                        <li class="list-group-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <strong>@treino.Nome</strong> <br />
                                    <small>Categoria: @treino.Categoria?.Nome</small> <br />
                                    <small>Duração: @treino.Duracao minutos</small> <br />
                                    <small>Calorias Queimadas: @treino.CaloriasQueimadas</small>
                                </div>
                                <button class="btn btn-link" @onclick="(() => ToggleExercicios(treino.IdTreino))">
                                    @if (treino.ExibirExercicios)
                                    {
                                        <span>Esconder Exercícios</span>
                                    }
                                    else
                                    {
                                        <span>Mostrar Exercícios</span>
                                    }
                                </button>
                            </div>

                            @if (treino.ExibirExercicios)
                            {
                                <div class="mt-2">
                                    @if (treino.Exercicios == null || treino.Exercicios.Count == 0)
                                    {
                                        <p>Nenhum exercício cadastrado para este treino.</p>
                                    }
                                    else
                                    {
                                        <ul class="list-group list-group-flush">
                                            @foreach (var exercicio in treino.Exercicios)
                                            {
                                                <li class="list-group-item">
                                                    <strong>@exercicio.Nome</strong> <br />
                                                    <small>Repetições: @exercicio.Repeticoes</small> <br />
                                                    <small>Séries: @exercicio.Series</small> <br />
                                                    <small>Peso: @exercicio.Peso kg</small> <br />
                                                    <small>Grupo Muscular: @exercicio.GrupoMuscular?.Nome</small>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </div>
                            }
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
</div>

@code {
    private List<TreinoViewModel> treinos;

    protected override async Task OnInitializedAsync()
    {
        // Carregar treinos do banco de dados ou serviço
        treinos = await ObterTreinos();
    }

    private void ToggleExercicios(int idTreino)
    {
        var treino = treinos.FirstOrDefault(t => t.IdTreino == idTreino);
        if (treino != null)
        {
            treino.ExibirExercicios = !treino.ExibirExercicios;
        }
    }

    private Task<List<TreinoViewModel>> ObterTreinos()
    {
        // Implementar lógica para obter treinos e seus exercícios do banco de dados
        return Task.FromResult(new List<TreinoViewModel>
        {
            new TreinoViewModel
            {
                IdTreino = 1,
                Nome = "Treino de Força",
                Duracao = "60",
                CaloriasQueimadas = 500,
                Categoria = new CategoriaExercicio { Nome = "Força" },
                Exercicios = new List<ExercicioViewModel>
                {
                    new ExercicioViewModel
                    {
                        Nome = "Supino Reto",
                        Repeticoes = "10",
                        Series = "3",
                        Peso = 80,
                        GrupoMuscular = new GrupoMuscular { Nome = "Peito" }
                    },
                    new ExercicioViewModel
                    {
                        Nome = "Rosca Direta",
                        Repeticoes = "12",
                        Series = "3",
                        Peso = 40,
                        GrupoMuscular = new GrupoMuscular { Nome = "Bíceps" }
                    }
                }
            },
            new TreinoViewModel
            {
                IdTreino = 2,
                Nome = "Treino Cardio",
                Duracao = "45",
                CaloriasQueimadas = 400,
                Categoria = new CategoriaExercicio { Nome = "Cardio" },
                Exercicios = new List<ExercicioViewModel>
                {
                    new ExercicioViewModel
                    {
                        Nome = "Corrida",
                        Repeticoes = "N/A",
                        Series = "N/A",
                        Peso = 0,
                        GrupoMuscular = new GrupoMuscular { Nome = "Cardiovascular" }
                    }
                }
            }
        });
    }

    private class TreinoViewModel
    {
        public int IdTreino { get; set; }
        public string Nome { get; set; }
        public string Duracao { get; set; }
        public double CaloriasQueimadas { get; set; }
        public CategoriaExercicio Categoria { get; set; }
        public List<ExercicioViewModel> Exercicios { get; set; }
        public bool ExibirExercicios { get; set; } = false;
    }

    private class ExercicioViewModel
    {
        public string Nome { get; set; }
        public string Repeticoes { get; set; }
        public string Series { get; set; }
        public double Peso { get; set; }
        public GrupoMuscular GrupoMuscular { get; set; }
    }
}
}